# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'




#Customer
    admin.contrat:
        class: VB\CustomerBundle\Admin\ContratAdmin
        arguments: [~, VB\CustomerBundle\Entity\Contrat, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Customer, label: Contrat }
        public: true

    admin.customeraddress:
        class: VB\CustomerBundle\Admin\CustomerAddressAdmin
        arguments: [~, VB\CustomerBundle\Entity\CustomerAddress, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Customer, label: CustomerAddress }
        public: true

    admin.customer:
        class: VB\CustomerBundle\Admin\CustomerAdmin
        arguments: [~, VB\CustomerBundle\Entity\Customer, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Customer, label: Customer }
        public: true


    admin.customeroption:
        class: VB\CustomerBundle\Admin\CustomerOptionAdmin
        arguments: [~, VB\CustomerBundle\Entity\CustomerOption, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Customer, label: CustomerOption }
        public: true

    admin.historicconnexion:
        class: VB\CustomerBundle\Admin\HistoricConnexionAdmin
        arguments: [~, VB\CustomerBundle\Entity\HistoricConnexion, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Customer, label: HistoricConnexion }
        public: true

    admin.adressedomiciliataire:
        class: VB\OptionBundle\Admin\AdresseDomiciliataireAdmin
        arguments: [~, VB\OptionBundle\Entity\AdresseDomiciliataire, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Option, label: AdresseDomiciliataire }
        public: true

    admin.scanoption:
        class: VB\OptionBundle\Admin\ScanOptionAdmin
        arguments: [~, VB\OptionBundle\Entity\ScanOption, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Option, label: ScanOption }
        public: true

    admin.mailoption:
        class: VB\OptionBundle\Admin\MailOptionAdmin
        arguments: [~, VB\OptionBundle\Entity\MailOption, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Option, label: MailOption }
        public: true

    admin.typeentity:
        class: VB\OptionBundle\Admin\TypeEntityAdmin
        arguments: [~, VB\OptionBundle\Entity\TypeEntity, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Option, label: TypeEntity }
        public: true

    admin.formentity:
        class: VB\OptionBundle\Admin\FormEntityAdmin
        arguments: [~, VB\OptionBundle\Entity\FormEntity, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Option, label: FormEntity }
        public: true

    admin.typicalofferadmin:
        class: VB\OptionBundle\Admin\TypicalOfferAdmin
        arguments: [~, VB\OptionBundle\Entity\TypicalOffer, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Option, label: TypicalOfferAdmin }
        public: true


#Payment
    admin.bank:
        class: VB\PaymentBundle\Admin\BankAdmin
        arguments: [~, VB\PaymentBundle\Entity\Bank, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Payment, label: Bank }
        public: true

    admin.invoiceline:
        class: VB\PaymentBundle\Admin\InvoiceLineAdmin
        arguments: [~, VB\PaymentBundle\Entity\InvoiceLine, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Payment, label: InvoiceLine }
        public: true

    admin.invoices:
        class: VB\PaymentBundle\Admin\InvoicesAdmin
        arguments: [~, VB\PaymentBundle\Entity\Invoices, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Payment, label: Invoices  }
        public: true

    admin.payment:
        class: VB\PaymentBundle\Admin\PaymentAdmin
        arguments: [~, VB\PaymentBundle\Entity\Payment, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Payment, label: Payment }
        public: true

    admin.typepayment:
        class: VB\PaymentBundle\Admin\TypePaymentAdmin
        arguments: [~, VB\PaymentBundle\Entity\TypePayment, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Payment, label: TypePayment }
        public: true


#Production
    admin.production:
        class: VB\ProductionBundle\Admin\ProductionAdmin
        arguments: [~, VB\ProductionBundle\Entity\Production, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Production, label: Production }
        public: true

    admin.shipperaddress:
        class: VB\ProductionBundle\Admin\ShipperAddressAdmin
        arguments: [~, VB\ProductionBundle\Entity\ShipperAddress, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Production, label: ShipperAddress }
        public: true

#Prospects
    admin.prospects:
        class: VB\ProspectsBundle\Admin\ProspectAdmin
        arguments: [~, VB\ProspectsBundle\Entity\Prospect, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Prospects, label: Prospect }
        public: true