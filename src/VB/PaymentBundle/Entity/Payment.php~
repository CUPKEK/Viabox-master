<?php

namespace VB\PaymentBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Payment
 *
 * @ORM\Table(name="payment", indexes={@ORM\Index(name="Payment_Bank0_FK", columns={"id_bank"}), @ORM\Index(name="Payment_Customer1_FK", columns={"id_customer"}), @ORM\Index(name="Payment_Type_Payment2_FK", columns={"id_type_payment"})})
 * @ORM\Entity(repositoryClass="VB\PaymentBundle\Repository\PaymentRepository")
 */
class Payment
{
    /**
     * @var \DateTime
     *
     * @ORM\Column(name="date_payment", type="date", nullable=false)
     */
    private $datePayment;

    /**
     * @var int
     *
     * @ORM\Column(name="num_transaction", type="integer", nullable=false)
     */
    private $numTransaction;

    /**
     * @var float
     *
     * @ORM\Column(name="amount", type="float", precision=10, scale=0, nullable=false)
     */
    private $amount;

    /**
     * @var int
     *
     * @ORM\Column(name="id_payment", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $idPayment;

    /**
     * @var \VB\PaymentBundle\Entity\Bank
     *
     * @ORM\ManyToOne(targetEntity="VB\PaymentBundle\Entity\Bank")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="id_bank", referencedColumnName="id_bank")
     * })
     */
    private $idBank;

    /**
     * @var \VB\CustomerBundle\Entity\Customer
     *
     * @ORM\ManyToOne(targetEntity="VB\CustomerBundle\Entity\Customer")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="id_customer", referencedColumnName="id_customer")
     * })
     */
    private $idCustomer;

    /**
     * @var \VB\PaymentBundle\Entity\TypePayment
     *
     * @ORM\ManyToOne(targetEntity="VB\paymentBundle\Entity\TypePayment")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="id_type_payment", referencedColumnName="id_type_payment")
     * })
     */
    private $idTypePayment;

    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="VB\PaymentBundle\Entity\Invoices", inversedBy="idPayment")
     * @ORM\JoinTable(name="composed",
     *   joinColumns={
     *     @ORM\JoinColumn(name="id_payment", referencedColumnName="id_payment")
     *   },
     *   inverseJoinColumns={
     *     @ORM\JoinColumn(name="id_invoices", referencedColumnName="id_invoices")
     *   }
     * )
     */
    private $idInvoices;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->idInvoices = new \Doctrine\Common\Collections\ArrayCollection();
    }

}
